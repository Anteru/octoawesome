#version 130
uniform float AmbientIntensity;
uniform vec4 AmbientColor;
uniform float DiffuseIntensity;
uniform vec4 DiffuseColor;
uniform vec3 DiffuseDirection;
uniform sampler2DArray BlockTextures;
uniform sampler2D ShadowMap;


in vec3 psNormal;
in vec2 psTexcoord;
flat in uint psTexIndex;

in vec4 shadowPosition;

out vec4 outColor;
void main()
{
    float lighted = 1.0f;
    float cosTheta = dot(psNormal,DiffuseDirection);
    cosTheta = clamp(cosTheta,0.0,1.0);
    float bias = 0.005 * tan(acos(cosTheta));
    bias = clamp(bias,0,0.01);
    if (texture(ShadowMap,shadowPosition.xy).z < shadowPosition.z - bias)
    {
      lighted = 0.2f;
    }
	vec4 texColor = texture(BlockTextures,vec3(psTexcoord,psTexIndex));
	vec4 ambient = AmbientColor * AmbientIntensity;
	vec4 diffuse = clamp(dot(-DiffuseDirection,psNormal),0.0,1.0) * DiffuseColor * DiffuseIntensity;
	outColor = vec4(texColor.rgb*lighted,texColor.a) * clamp(ambient + vec4(diffuse.rgb,1.0),0.0,1.0);
}
